#!/usr/bin/python

rule subject_ancestry_csv:
    input:
        ancestry = 'snpweights/samples.snpweights.csv',
        track = 'subject_level/SampleUsedforSubject.csv',
        subjects = 'final_qc_subject_level/{pop}_subjects.fam'
    output:
        'ancestry/subjects.snpweights.csv'
    run:
        sampToSubDict = MakeSampToSubDict(input.track)
        subjectDict = {}
        with open(input.subjects) as f:
            for line in f:
                sub = line.split()[1]
                subjectDict[sub] = 1
        with open(input.ancestry) as f, open(output[0], 'w') as out:
            head = f.readline()
            out.write(head)
            line = f.readline()
            while line != '':
                line_list = line.rstrip().split(',')
                samp = line_list[0]
                if sampToSubDict.get(samp):
                    sub = sampToSubDict[samp]
                    if subjectDict.get(sub):
                        line_list[0] = sub
                        output.write(','.join(line_list) + '\n')
                line = f.readline()

rule ancestry_plot:
    input:
        'ancestry/subjects.snpweights.csv'
    output:
        png = 'ancestry/subjects.ancestry.png',
        R = 'ancestry/subjects.ancestry.R',
        Rout = 'ancestry/subjects.ancestry.R.out'
    run:
        rTxt = '''
        require(plotrix)
        data <- read.csv("''' + input[0] + '''")
        data$total=data$EUR+data$AFR+data$ASN         # Need to account
        data$European=data$EUR/data$total             # for slight rounding
        data$African=data$AFR/data$total              # in the ancestry
        data$Asian=data$ASN/data$total
        data_p=data[c("European","Asian","African")]  # triax.plot to work
        png("''' + output.png + '''")
        triax.plot(data_p, pch=20, col.symbol=rgb(red=0, green=0, blue=1, alpha=.3), cc.axes=T, show.grid=T)
        dev.off()
        '''
        with open(output.R, 'w')  as R:
            R.write(rTxt)
        shell('R --vanilla < {output.R} > {output.Rout}')


