#!/usr/bin/python

#if multiple samples from the same subject the sample with the highest call rate will be kept

rule sample_to_keep:
    input:
        sampSheet = sample_sheet,
        imiss4 = 'remove_qc_fail/samples_remove_failures.imiss'
    output:
        keep = 'subject_level/sampsToKeep.txt',
        track = 'subject_level/SampleUsedforSubject.csv',
        rename = 'subject_level/renameSampToSub.txt'
    run:
        (SubToSampListDict, sampToSubIdDict) = makeSubjectToSampListDict(sample_sheet)
        crDict = makeCallRateDict(input.imiss4)
        controlDict = makeControlDict(sample_sheet)
        with open(output.keep, 'w') as out1, open(output.track, 'w') as out2, open(output.rename, 'w') as out3:
            out2.write('Subject_ID,Sample_ID\n')
            for sub in SubToSampListDict.keys():
                if not controlDict.get(sub):
                    sampList = SubToSampListDict[sub]
                    crList = []
                    CrSampList = []
                    for s in sampList:
                        if crDict.get(s):
                            crList.append(crDict[s])
                            CrSampList.append(s)
                    if len(crList) > 0:
                        bestSamp = getBestSamp(CrSampList, crList)
                        out2.write(','.join(sub, bestSamp) + '\n')
                        out1.write(bestSamp + ' ' + bestSamp + '\n')
                        out3.write(' '.join([bestSamp, bestSamp, sub, sub]) + '\n')
                    else:
                        out2.write(','.join(sub, 'NA') + '\n')


rule plink_make_subject_level:
    input:
        bed = 'remove_qc_fail/samples.bed',
        bim = 'remove_qc_fail/samples.bim',
        fam = 'remove_qc_fail/samples.fam',
        keep = 'subject_level/sampsToKeep.txt'
    params:
        inProj = 'remove_qc_fail/samples',
        outProj = 'subject_level/samples'
    output:
        'subject_level/samples.bed',
        'subject_level/samples.bim',
        'subject_level/samples.fam'
    shell:
        'plink --bfile {params.inProj} --keep {input.keep} --memory 10000 --make-bed --out {params.outProj}'

rule rename_samp_to_sub:
    input:
        bed = 'subject_level/samples.bed',
        bim = 'subject_level/samples.bim',
        fam = 'subject_level/samples.fam',
        rename = 'subject_level/renameSampToSub.txt'
    params:
        inProj = 'subject_level/samples',
        outProj = 'subject_level/subjects'
    output:
        'subject_level/subjects.bed',
        'subject_level/subjects.bim',
        'subject_level/subjects.fam'
    shell:
        'plink --bfile {params.inProj} --update-ids {input.rename} --memory 10000 --make-bed --out {params.outProj}'

rule qc_stats_subject:
    input:
        'subject_level/subjects.bed',
        'subject_level/subjects.bim',
        'subject_level/subjects.fam'
    params:
        inProj = 'subject_level/subjects',
        outProj = 'subject_level/subjects_qc'
    output:
        'subject_level/subjects_qc.imiss',
        'subject_level/subjects_qc.lmiss',
        'subject_level/subjects_qc.sexcheck',
        'subject_level/subjects_qc.frq',
        'subject_level/subjects_qc.hwe'
    shell:
        'plink --bfile {params.inProj} --freq --missing --hardy --het --check-sex --memory 10000 --out {params.outProj}'

