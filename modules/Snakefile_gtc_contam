#!/usr/bin/python

rule gtc_to_adpc:
    input:
        gtc = getGtc,
        manifest = illumina_manifest_file
    output:
        adpc = 'contam/{sample_id}.adpc.bin',
        txt = 'contam/{sample_id}.adpc.bin.numSnps.txt'
    shell:
        'python /DCEG/CGF/Bioinformatics/Production/Eric/scripts/gtc2adpc.py {input.gtc} {input.manifest} {output.adpc}'

rule contam_test_GSA_1000g:
    input:
        adpc = 'contam/{sample_id}.adpc.bin',
        abf = '/DCEG/CGF/Bioinformatics/Production/Eric/refFiles/ThousG.AF.abf.txt'
    params:
        software = '/DCEG/CGF/Bioinformatics/Production/BZhu/verifyIDintensity/verifyIDintensity/verifyIDintensity',
    output:
        'one_samp_b_1000g_contam/{sample_id}.contam.out'
    shell:
        '{params.software} -m 700078 -n 1 -b {input.abf} -v -p -i {input.adpc} > {output}'

rule combine_contam_one_samp_b_1000g:
    input:
        contam = expand('one_samp_b_1000g_contam/{sample_id}.contam.out', sample_id = SAMPLE_IDS),
        intens = 'all_sample_idat_intensity/idat_intensity.csv'
    params:
        intensThresh = 4000
    output:
        'all_contam/contam.csv'
    run:
        intensDict = {}
        with open(input.intens) as f:
            head = f.readline()
            line = f.readline()
            while line != '':
                (samp, chipId, intensity) = line.rstrip().split(',')
                intensDict[samp] = float(intensity)
                line = f.readline()
        with open(output[0], 'w') as out:
            out.write('ID,%Mix,LLK,LLK0\n')
            for i in input.contam:
                samp = os.path.basename(i).split('.')[0]
                intens = intensDict[samp]
                with open(i) as f:
                    head = f.readline()
                    while '%Mix' not in head and head != '':
                        head = f.readline()
                    if head == '':
                        print('strange file format: ' + i)
                        sys.exit(1)
                    head = f.readline()
                    line = f.readline()
                    line_list = line.split()
                    line_list[0] = samp
                    if intens < params.intensThresh:
                        line_list[1] = 'NA'
                    out.write(','.join(line_list) + '\n')
