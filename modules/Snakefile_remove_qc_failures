#!/usr/bin/python

##call rate failures already removed, so this is just to remove the sex discordant, duplicate discordant, and contaminated samples
rule qc_fail_samp_list:
    input:
        outName + '_LimsUpload_' + sampSheetDate + '.csv'
    output:
        lowCR = 'remove_qc_fail/LowCR.txt',
        contam = 'remove_qc_fail/contaminated.txt',
        sex = 'remove_qc_fail/SexDiscordant.txt',
        repDisc = 'remove_qc_fail/ExpectedRepDiscordant.txt'
    run:
        with open(input[0]) as f, open(output.lowCR, 'w') as lowCrOut, open(output.contam, 'w') as contamOut, open(output.sex, 'w') as sexOut, open(output.repDisc, 'w') as repDiscOut:
            head = f.readline()
            line = f.readline()
            while line != '':
                line_list = line.rstrip().split(',')
                samp = line_list[2]
                (lowCR, contam, sex, repDisc, unexpectRep) = line_list[5:]
                if lowCR == 'TRUE':
                    lowCrOut.write(samp + ' ' + samp + '\n')
                if contam == 'TRUE':
                    contamOut.write(samp + ' ' + samp + '\n')
                if sex == 'TRUE':
                    sexOut.write(samp + ' ' + samp + '\n')
                if repDisc == 'TRUE':
                    repDiscOut.write(samp + ' ' + samp + '\n')
                line = f.readline()


rule combine_fail_lists:
    input:
        contam = 'remove_qc_fail/contaminated.txt',
        fam = 'plink_filter_call_rate_2/samples.fam'
    params:
        contam = config['remove_contam'],
    output:
        'remove_qc_fail/sampleFailures.txt'
    run:
        sampDict = {}
        with open(input.fam) as f:
            for line in f:
                samp = line.split()[1]
                sampDict[samp] = 1
        with open(output[0], 'w') as out:
            if params.contam == 'YES':
                with open(input.contam) as f:
                    for line in f:
                        samp = line.split()[1]
                        if sampDict.get(samp):
                            out.write(line)


rule remove_failures:
    input:
        bed = 'plink_filter_call_rate_2/samples.bed',
        bim = 'plink_filter_call_rate_2/samples.bim',
        fam = 'plink_filter_call_rate_2/samples.fam',
        remove = 'remove_qc_fail/sampleFailures.txt'
    params:
        inProj = 'plink_filter_call_rate_2/samples',
        outProj = 'remove_qc_fail/samples'
    output:
        'remove_qc_fail/samples.bed',
        'remove_qc_fail/samples.bim',
        'remove_qc_fail/samples.fam'
    shell:
        'plink --bfile {params.inProj} --remove {input.remove} --memory 10000 --make-bed --out {params.outProj}'

rule qc_stats_after_remove_failures:
    input:
        'remove_qc_fail/samples.bed',
        'remove_qc_fail/samples.bim',
        'remove_qc_fail/samples.fam'
    params:
        inProj = 'remove_qc_fail/samples',
        outProj = 'remove_qc_fail/samples_remove_failures'
    output:
        'remove_qc_fail/samples_remove_failures.imiss',
        'remove_qc_fail/samples_remove_failures.lmiss',
        'remove_qc_fail/samples_remove_failures.sexcheck',
        'remove_qc_fail/samples_remove_failures.frq',
        'remove_qc_fail/samples_remove_failures.hwe'
    shell:
        'plink --bfile {params.inProj} --freq --missing --hardy --het --check-sex --memory 10000 --out {params.outProj}'

