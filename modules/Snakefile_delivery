#!/usr/bin/python

rule copy_docs:
    input:
        doc = 'word_doc/' + outName + '_QC_Report_' + sampSheetDate + '.docx',
        xls = 'word_doc/' + outName + '_QC_Report_' + sampSheetDate + '.xls',
        samp_sheet = sample_sheet,
        sub_mapping = 'subject_level/SampleUsedforSubject.csv'
    output:
        doc = 'delivery/' + outName + '_QC_Report_' + sampSheetDate + '.docx',
        xls = 'delivery/' + outName + '_QC_Report_' + sampSheetDate + '.xls',
        samp_sheet = 'delivery/' + outName + '_AnalysisManifest_' + sampSheetDate + '.csv',
        sub_mapping = 'delivery/SampleUsedforSubject.csv'
    shell:
        'cp {input.doc} {output.doc};cp {input.xls} {output.xls};cp {input.samp_sheet} {output.samp_sheet};cp {input.sub_mapping} {output.sub_mapping}'

rule zip_HWP:
    input:
        expand('HWP/{pop}_subjects_qc.hwe', pop = POPS)
    output:
        'delivery/HWP.zip'
    shell:
        'zip {output} {input}'

rule copy_sample_geno_data:
    input:
        bed = 'plink_start/samples.bed',
        bim = 'plink_start/samples.bim',
        fam = 'plink_start/samples.fam'
    output:
        bed = 'delivery/samples.bed',
        bim = 'delivery/samples.bim',
        fam = 'delivery/samples.fam'
    shell:
        'cp {input.bed} {output.bed};cp {input.bim} {output.bim};cp {input.fam} {output.fam}'

rule copy_subject_geno_data:
    input:
        bed = 'subject_level/subjects.bed',
        bim = 'subject_level/subjects.bim',
        fam = 'subject_level/subjects.fam'
    output:
        bed = 'delivery/subjects.bed',
        bim = 'delivery/subjects.bim',
        fam = 'delivery/subjects.fam'
    shell:
        'cp {input.bed} {output.bed};cp {input.bim} {output.bim};cp {input.fam} {output.fam}'


rule readme:
    input:
        egt = '/DCEG/CGF/Infinium/Clustering/CG0311/initial/GSA_9K_CR99.egt'
    output:
        'delivery/README'
    run:
        with open(output[0], 'w') as out:
            out.write('GTC files were generated using the cluster file: ' + input.egt + '\n')
            out.write('samples.* contain genotypes in PLINK format for all samples at all SNPs before any QC filters.\n')
            out.write('subjects.* contain genotypes in PLINK format for all subjects that passed 2-step call rate filter,\n')
            out.write('and contamination filter. If multiple samples for a subject the sample with the highest call rate is kept.\n')
            out.write('Sample and subject identifiers can be found in ' + outName + '_AnalysisManifest_' + sampSheetDate + '.csv\n')
            out.write('More details and QC stats can be found in ' + outName + '_QC_Report_' + sampSheetDate + '.docx\n')
            out.write('and the supplemental multi-tab excel workbook ' + outName + '_QC_Report_' + sampSheetDate + '.xls\n')
            out.write('"NA" values in "EXPECTED_REPLICATES" tab of excel indicate that one or both samples failed QC.\n')
            out.write('HWP.zip contains the hardy-weinberg p-values for all SNPs for each ancestry group.\n')
            out.write('SampleUsedforSubject.csv lists each subject in your project in the first column.\n')
            out.write('In the second column it has "NA" if no samples passed QC for this subject.  Otherwise it gives the sample Id\n')
            out.write('of the sample that was mapped to the subject ID in subjects.*\n')

