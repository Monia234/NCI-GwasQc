"""Add case/control status and plot sample/marker level call rates.

Generates two QC plots highlighting the call rate for samples colored by Case/Control/QC and for
markers.
"""
rule add_CaCo_imiss:
    """Adds Case/Control status from the sample sheet.

    Takes the sample level call rate filter results (i.e., missing genotype calls) and adds
    Case/Control/QC status column (`CaCo`). This column is encoded as {0: control, 1: case, 2: QC
    or missing}.
    """
    input:
        imiss="{d}/samples{filt}.imiss",
        sampSheet=sample_sheet,
    output:
        "{d}/samples{filt}.imiss.csv",
    run:
        sampToCaCoDict = makeSampleToCaCoDict(input.sampSheet)
        with open(input.imiss) as f, open(output[0], "w") as out:
            head = f.readline()
            out.write("Sample_ID,CaCo,N_MISS,N_GENO,F_MISS\n")
            line = f.readline()
            while line != "":
                line_list = line.split()
                samp = line_list[1]
                CaCo = sampToCaCoDict[samp]
                if CaCo == "NA":
                    CaCo = "2"
                out.write(",".join([samp, CaCo] + line_list[3:]) + "\n")
                line = f.readline()


rule plot_completion:
    """Plots sample and marker level completion rates.

    Calculates the "Completion Rate" as `1 - Missing Call Rate`. Then creates two panels (left is
    sample and right is marker a.k.a Loci). The x-axis is the percent of samples/loci after
    sorting by completion rate. The y-axis is the completion rate as a percentage. Samples are
    colored by Case/Control/QC status {case: red, control: blue, qc: gray, Unknown: green}. The
    two call rate filter thresholds are plotted as horizontal lines.
    """
    input:
        samp="{d}/samples{filt}.imiss.csv",
        snp="{d}/samples{filt}.lmiss",
    output:
        png="{d}/samples{filt}.completion.png",
        R="{d}/samples{filt}.completion.R",
        Rout="{d}/samples{filt}.completion.R.out",
    params:
        cut1=str(samp_cr_1 * 100),
        cut2=str(samp_cr_2 * 100),
    run:
        (ylim1, ylim2) = ylimDict[wildcards.filt]
        rTxt = (
            '''
                        colors <- c(rgb(0, 0, 1, .3), rgb(1, 0, 0, .3), rgb(.75, .75, .75, .3), rgb(0, 1, 0, .3))
                        data <- read.csv("'''
            + input.samp
            + '''")
                        data$CR <- 1.0 - data$F_MISS
                        sortData <- data[with(data, order(data$CR)), ]
                        dataSnp <- read.table("'''
            + input.snp
            + '''", head = T)
                        snpCR <- 1.0 - dataSnp$F_MISS[!is.na(dataSnp$F_MISS)]
                        a <- 0:(nrow(sortData) - 1)
                        x <- 100.0 * a/length(a)
                        a2 <- 0:(length(snpCR) - 1)
                        x2 <- 100.0 * a2/length(a2)
                        png("'''
            + output.png
            + """", 6.5, 6.5, "in", res = 300)
                        layout(cbind(1,2))
                        par(mar= c(7,4,2,0), family = "mono")
                        plot(x, sortData$CR * 100.0, xlab="Samples(%)", xlim = c(0, 100), ylim = c("""
            + ylim1
            + """, """
            + ylim2
            + """), ylab="Completion Rate(%)", pch=20, col= colors[sortData$CaCo + 1], cex = 0.4, axes=F)
                        axis(side=1, at= c(0,20,40,60,80,100), labels= c(0,20,40,60,80,100))
                        axis(side=2)
                        abline(h="""
            + params.cut1
            + """)
                        abline(h="""
            + params.cut2
            + """)
                        title(main= "Sample Completion",sub= "", cex=0.6)
                        legend("center", legend = c("Cases", "Controls", "QC", "Unknown"), col = c("red", "blue", "gray", "green"), pch = 19, cex=0.7, bty="n")

                        par(mar= c(7,1,2,3))
                        plot(x2, 100 * sort(snpCR), xlim= c(0, 100), ylim= c("""
            + ylim1
            + """, """
            + ylim2
            + """), xlab= "Loci(%)", ylab="", col = rgb(0.5, 0.5, 0.5, 0.2), pch = 20, cex = 0.3, axes=F)
                        axis(side=1, at= c(0,20,40,60,80,100), labels= c(0,20,40,60,80,100))
                        abline(h="""
            + params.cut1
            + """)
                        abline(h="""
            + params.cut2
            + """)
                        title(main= "Locus Completion",sub= "", cex=0.6)
                        dev.off()
                        """
        )
        with open(output.R, "w") as R:
            R.write(rTxt)
        shell("R --vanilla < {output.R} > {output.Rout}")
